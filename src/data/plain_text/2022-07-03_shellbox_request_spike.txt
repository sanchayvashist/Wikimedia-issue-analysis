

==Summary==


An increase in Score requests (musical note rendering) from Parsoid overwhelmed the Shellbox service. This was mitigated by allocating more k8s pods to Shellbox. The overload took place from 11:17 to 11:33.

From the Grafana dashboard, we see that a majority of requests took over 5,000ms (5s) instead of less the usual 10ms (0.01s), and for two minutes 11:25-11:27 requests actually failed with HTTP 503 instead.

From the Logstash dashboard, we measure approximately 35,000 failed requests during this time. Of which 99.9% were from Parsoid, for de.wikipedia.org requests that render musical notes through the Score extension. 26K received HTTP 503, and 9K received HTTP 504. The remaining 0.1% were edits or pageviews calling Shellbox for syntax highlighting. 

See 2022-07-11 Shellbox and parsoid saturation for re-occurrence and follow up action items.

Documentation:
*Shellbox requests dashboard

==Actionables==

*T310557: Improving Shellbox resource management
*T312319: Reduce Lilypond shellouts from VisualEditor

==Scorecard==


Incident Engagement ScoreCard

                                              	Question                                                                                                          	Answer
(yes/no)	Notes
People                                        	Were the people responding to this incident sufficiently different than the previous five incidents?              	no 	
People                                        	Were the people who responded prepared enough to respond effectively                                              	yes	
People                                        	Were fewer than five people paged?                                                                                	no 	
People                                        	Were pages routed to the correct sub-team(s)?                                                                     	no 	
People                                        	Were pages routed to online (business hours) engineers?  Answer “no” if engineers were paged after business hours.	yes	
Process                                       	Was the incident status section actively updated during the incident?                                             	yes	
Process                                       	Was the public status page updated?                                                                               	no 	
Process                                       	Is there a phabricator task for the incident?                                                                     	yes	
Process                                       	Are the documented action items assigned?                                                                         	no 	
Process                                       	Is this incident sufficiently different from earlier incidents so as not to be a repeat occurrence?               	no 	
Tooling                                       	To the best of your knowledge was the open task queue free of any tasks that would have prevented this incident? Answer “no” if there are
open tasks that would prevent this incident or make mitigation easier if implemented.	no 	
Tooling                                       	Were the people responding able to communicate effectively during the incident with the existing tooling?         	yes	
Tooling                                       	Did existing monitoring notify the initial responders?                                                            	yes	
Tooling                                       	Were the engineering tools that were to be used during the incident, available and in service?                    	yes	
Tooling                                       	Were the steps taken to mitigate guided by an existing runbook?                                                   	no 	
Total score (count of all “yes” answers above)	Total score (count of all “yes” answers above)                                                                    	7  	
